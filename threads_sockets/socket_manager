import socket
import pickle
from threading_ed2 import SortingThread

class SocketServer:
    def __init__(self, host='localhost', port=8080):
        self.server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.server.bind((host, port))
        self.algorithms = {
            'bubble': bubble_sort,
            'quick': quick_sort,
            # Añadir más algoritmos
        }
    
    def start(self):
        self.server.listen()
        while True:
            conn, addr = self.server.accept()
            data = conn.recv(4096)
            df = pickle.loads(data)
            
            threads = []
            for name, algorithm in self.algorithms.items():
                thread = SortingThread(name, algorithm, df.values.tolist())
                thread.start()
                threads.append(thread)
            
            for thread in threads:
                thread.join()
                # Enviar resultados al cliente
                conn.send(pickle.dumps(thread.result))